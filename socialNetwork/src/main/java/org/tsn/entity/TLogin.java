package org.tsn.entity;

// Generated Jul 23, 2015 8:29:33 PM by Hibernate Tools 4.3.1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * TLogin generated by hbm2java
 */
@Entity
@Table(name = "t_login", catalog = "tsn_test", uniqueConstraints = @UniqueConstraint(columnNames = "USER_NAME"))
public class TLogin implements IBaseEntity
{

	private Integer					loginId;
	private String					userName;
	private String					password;
	private Set<TProjectMilestones>	TProjectMilestoneses			= new HashSet<TProjectMilestones>(
			0);
	private Set<TTeam>				TTeams							= new HashSet<TTeam>(
			0);
	private TProfile				TProfile;
	private Set<TProjects>			TProjectses						= new HashSet<TProjects>(
			0);
	private Set<TUserCiircle>		TUserCiirclesForLoginId			= new HashSet<TUserCiircle>(
			0);
	private Set<TSecurityAnswers>	TSecurityAnswerses				= new HashSet<TSecurityAnswers>(
			0);
	private Set<TUserCiircle>		TUserCiirclesForParentLoginId	= new HashSet<TUserCiircle>(
			0);

	public TLogin()
	{
	}

	public TLogin(String userName, String password)
	{
		this.userName = userName;
		this.password = password;
	}

	public TLogin(
			String userName,
			String password,
			Set<TProjectMilestones> TProjectMilestoneses,
			Set<TTeam> TTeams,
			TProfile TProfile,
			Set<TProjects> TProjectses,
			Set<TUserCiircle> TUserCiirclesForLoginId,
			Set<TSecurityAnswers> TSecurityAnswerses,
			Set<TUserCiircle> TUserCiirclesForParentLoginId)
	{
		this.userName = userName;
		this.password = password;
		this.TProjectMilestoneses = TProjectMilestoneses;
		this.TTeams = TTeams;
		this.TProfile = TProfile;
		this.TProjectses = TProjectses;
		this.TUserCiirclesForLoginId = TUserCiirclesForLoginId;
		this.TSecurityAnswerses = TSecurityAnswerses;
		this.TUserCiirclesForParentLoginId = TUserCiirclesForParentLoginId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "LOGIN_ID", unique = true, nullable = false)
	public Integer getLoginId()
	{
		return this.loginId;
	}

	public void setLoginId(Integer loginId)
	{
		this.loginId = loginId;
	}

	@Column(name = "USER_NAME", unique = true, nullable = false, length = 45)
	public String getUserName()
	{
		return this.userName;
	}

	public void setUserName(String userName)
	{
		this.userName = userName;
	}

	@Column(name = "PASSWORD", nullable = false, length = 45)
	public String getPassword()
	{
		return this.password;
	}

	public void setPassword(String password)
	{
		this.password = password;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TLogin")
	public Set<TProjectMilestones> getTProjectMilestoneses()
	{
		return this.TProjectMilestoneses;
	}

	public void setTProjectMilestoneses(
			Set<TProjectMilestones> TProjectMilestoneses)
	{
		this.TProjectMilestoneses = TProjectMilestoneses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TLogin")
	public Set<TTeam> getTTeams()
	{
		return this.TTeams;
	}

	public void setTTeams(Set<TTeam> TTeams)
	{
		this.TTeams = TTeams;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "TLogin")
	public TProfile getTProfile()
	{
		return this.TProfile;
	}

	public void setTProfile(TProfile TProfile)
	{
		this.TProfile = TProfile;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TLogin")
	public Set<TProjects> getTProjectses()
	{
		return this.TProjectses;
	}

	public void setTProjectses(Set<TProjects> TProjectses)
	{
		this.TProjectses = TProjectses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TLoginByLoginId")
	public Set<TUserCiircle> getTUserCiirclesForLoginId()
	{
		return this.TUserCiirclesForLoginId;
	}

	public void setTUserCiirclesForLoginId(
			Set<TUserCiircle> TUserCiirclesForLoginId)
	{
		this.TUserCiirclesForLoginId = TUserCiirclesForLoginId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TLogin")
	public Set<TSecurityAnswers> getTSecurityAnswerses()
	{
		return this.TSecurityAnswerses;
	}

	public void setTSecurityAnswerses(Set<TSecurityAnswers> TSecurityAnswerses)
	{
		this.TSecurityAnswerses = TSecurityAnswerses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TLoginByParentLoginId")
	public Set<TUserCiircle> getTUserCiirclesForParentLoginId()
	{
		return this.TUserCiirclesForParentLoginId;
	}

	public void setTUserCiirclesForParentLoginId(
			Set<TUserCiircle> TUserCiirclesForParentLoginId)
	{
		this.TUserCiirclesForParentLoginId = TUserCiirclesForParentLoginId;
	}

}
