<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util.xsd">



	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<context:annotation-config />
	<context:component-scan base-package="org.tsn.controller" />
	<context:component-scan base-package="org.tsn.service.impl" />

	<mvc:resources mapping="/css/**" location="/resources/css/" />
	<mvc:resources mapping="/images/**" location="/resources/images/" />
	<mvc:resources mapping="/documents/**" location="/resources/documents/" />
	<mvc:resources mapping="/js/**" location="/resources/js/" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<mvc:resources mapping="/static/**" location="/static/" />

	<http auto-config="true">
		<intercept-url pattern="/service/admin/masterData*" access="ROLE_ADMIN" />
		<logout logout-success-url="/admin" />
	</http>
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="2" />
	</bean>
	
	<bean name="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="1" />
	</bean>
     
    
    
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:tsnmessages" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>


	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="/WEB-INF/jdbc.properties" />
	</bean>


	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.databaseurl}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	 

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>org.tsn.entity.TAddress</value>
				<value>org.tsn.entity.TCategories</value>
				<value>org.tsn.entity.TProjectType</value>
				<value>org.tsn.entity.TEducation</value>
				<value>org.tsn.entity.TLogin</value>
				<value>org.tsn.entity.TOccupation</value>
				<value>org.tsn.entity.TProfile</value>
				<value>org.tsn.entity.TProjectFeeds</value>
				<value>org.tsn.entity.TProjectGallery</value>
				<value>org.tsn.entity.TProjectMilestones</value>
				<value>org.tsn.entity.TProject</value>
				<value>org.tsn.entity.TSecurityAnswers</value>
				<value>org.tsn.entity.TSecurityQuestions</value>
				<value>org.tsn.entity.TTeam</value>
				<value>org.tsn.entity.TUserCiircle</value>


			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${jdbc.dialect}
				</prop>
				<prop key="hibernate.show_sql">false</prop>
			</props>
		</property>
	</bean>


	
	<bean id="masterDataManager" class="org.tsn.logic.impl.MasterDataManagerImpl"> </bean>
	<bean id="masterDataDAO" class="org.tsn.dao.MasterDataDAOImpl"> </bean>
	
	<bean id="profileDAO" class="org.tsn.dao.UserProfileDAOImpl"></bean>
	<bean id="profileDataManager" class="org.tsn.logic.impl.UserProfileManagerImpl"></bean>
	 
	<bean id="fProjectDAO" class="org.tsn.dao.ProjectDAOImpl"></bean>
	<bean id="fMovement" class="org.tsn.logic.impl.ProjectMovementManager"></bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory"
			ref="sessionFactory" />
	</bean>

<bean id="loginFilterBean" class="org.tsn.controller.filter.LoginFilter"/>

</beans>